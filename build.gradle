plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Spring JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// oauth2
	// implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Spring Security
	// implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Lombok
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test 파일 관련 의존성 추가 사항
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	// JUnit
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// jpa PostgreSQL 연동을 위한 의존성 추가
	implementation group: 'org.postgresql', name:'postgresql', version: '42.2.19'
	runtimeOnly 'org.postgresql:postgresql'

	// assertThat 의존성 추가
	testImplementation 'org.assertj:assertj-core:3.24.2'

	// Email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Google API Client && Google sheets API 의존성 추가
	implementation 'com.google.apis:google-api-services-sheets:v4-rev516-1.23.0'
	implementation 'com.google.auth:google-auth-library-oauth2-http:0.20.0'


}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}

jar {
	enabled = false
}